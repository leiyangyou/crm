.remote
  = form_for(@lead, :url => promote_lead_path(@lead), :html => one_submit_only(:lead), :remote => true) do |f|
    = link_to_close convert_lead_path(@lead)
    = error_messages_for :account, :object_name => t('lead')
    = error_messages_for :contract, :object_name => t('contract')

    = fields_for(@account) do |a|
      = a.hidden_field :user_id
      = a.hidden_field :lead_id
      = a.hidden_field :first_name
      = a.hidden_field :last_name
      = a.hidden_field :access
      .section
        %small
          #{t(:convert_lead_text, @lead.full_name)}
          = a.hidden_field :name
        %table
          %tr
            %td
              .label.req
                #{t :account}
                %span#account_disabled_title :
              .value{:style=>'padding-top:8px;width:246px;'}
                #{@account.name}
            %td= spacer
            %td
              .label.req #{t :assigned_to}:
              - if can?(:assign_consultant, Account)
                = scoped_users_select(:account, consultants, :full_name)
              - else
                .value #{@lead.assignee.full_name}
                = a.hidden_field :assigned_to

    = fields_for(@contract) do |a|
      = render :partial => "contracts/membership_contract", :locals => {:f => a}

    = fields_for(@account) do |a|
      = render :partial => 'accounts/basic_info', :locals => {:f => a}
      = render :partial => 'accounts/contact_info', :locals => {:f => a}

    = render "leads/convert_permissions"
    .buttonbar
      = f.submit t(:convert_lead)
      #{t :or}
      = link_to_cancel convert_lead_path(@lead)
