= styles_for :membership_state

#memberships
  %br
  %div.subtitle_tools
    - if @account.contracts.membership_contracts.unsigned.count == 0
      - if @account.suspended?
        = link_to(t("resume"), resume_account_path(@account), :remote => true, :method => :post)

      - if @account.expired?
        = link_to_inline("edit_membership_state", edit_membership_state_account_path(@account, :contract => "renew"), :text => t("renew"))

      - if @account.active?
        = link_to_inline("edit_membership_state", suspend_account_path(@account), :text => t("suspend"))
        = link_to_inline("edit_membership_state", edit_membership_state_account_path(@account, :contract => "transfer"), :text => t("transfer"))
        - if object.can_renew?
          = link_to_inline("edit_membership_state", edit_membership_state_account_path(@account, :contract => "renew"), :text => t("renew"))

  .subtitle#edit_membership_state_title= t(:membership)
  .remote#edit_membership_state{:style =>"display:none;"}

  - current_state = object.current_state
  .list#membership_states
    %li{:style => 'border-bottom: none'}
      %small #{t(:unsigned_contracts)}
    - unsigned_contracts = @account.contracts.membership_contracts.unsigned.order("created_at desc")

    - unsigned_contracts.each do |contract|
      = render :partial => 'contracts/contract', :locals => {:contract => contract}

    %li{:style => 'border-bottom: none'}
      %small #{t(:membership_states)}

    - object.membership_states.order("started_on desc, created_at desc").each do |membership_state|
      %li{:class =>"membership_state #{membership_state.state_type} #{membership_state == current_state ? "current_state" : "" }"}
        %span.type.strip{:class => membership_state.state_type}
          = "#{t("view.membership_states.state.#{membership_state.state_type}")}"
        -#%span.created_at
        -#  = "#{membership_state.created_at.to_date}:"
        - case membership_state.state_type
          - when MembershipState::TYPES::ACTIVE
            %span.membership_type
              = "#{MembershipType.find_by_id(membership_state.type_id).try(:name)}"
            %span.range
              = "#{membership_state.started_on} - #{membership_state.finished_on}"
          - when MembershipState::TYPES::EXPIRED
            %span.range
              = "#{membership_state.started_on}"
              - if membership_state.finished_on
                = "- #{membership_state.finished_on}"
          - when MembershipState::TYPES::SUSPENDED
            %span.range
              = "#{membership_state.started_on} - #{membership_state.finished_on}"
          - when MembershipState::TYPES::TRANSFERRED
            %span.transfer_target
              - account = Account.find_by_id(membership_state.target_id)
              = link_to account.name, account_path(account)
          - when MembershipState::TYPES::TERMINATED
            = "#{membership_state.reason}"
        %span.contract
          - if membership_state.contract_id
            = link_to membership_state.contract_id, contract_path(:id => membership_state.contract_id, :format => 'pdf')
